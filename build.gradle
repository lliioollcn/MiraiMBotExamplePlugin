buildscript {
    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/gradle-plugin'
        }
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.4.21' // 请确保添加 Kotlin，至少使用 1.4.0 版本
}


group 'com.mohistmc'
version '1.0-SNAPSHOT'
[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

repositories {
    maven {
        credentials {
            username '5eca92c3723771c6a5f78860'
            password 'RZFjd(j-TpwH'
        }
        url 'https://packages.aliyun.com/maven/repository/2004385-snapshot-EDtVE0/'
    }
    maven {
        url 'https://maven.aliyun.com/repository/public/'
    }
    maven {
        credentials {
            username '5eca92c3723771c6a5f78860'
            password 'RZFjd(j-TpwH'
        }
        url 'https://packages.aliyun.com/maven/repository/2004385-release-A6mrLn/'
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile 'com.mohistmc:miraimbot:0.3.0'
    annotationProcessor 'com.mohistmc:miraimbot:0.3.0'
    compile 'net.mamoe:mirai-core:2.0.0'
    compile 'net.mamoe:mirai-login-solver-selenium:1.0-dev-10'
    compile 'com.alibaba:fastjson:1.2.59'
    compile 'commons-io:commons-io:2.8.0'
    compile 'net.minecrell:terminalconsoleappender:1.2.0'
    compile 'org.jline:jline-terminal-jansi:3.12.1'
    compile 'org.jline:jline-terminal-jna:3.12.1'
    compile 'org.jline:jline-reader:3.12.1'

    compile 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
    compile 'com.google.guava:guava:21.0'
    compile "com.mohistmc.yaml:Yaml:0.1"
    compile 'org.apache.logging.log4j:log4j-api:2.13.3'
    compile 'org.apache.logging.log4j:log4j-core:2.13.3'
    compile 'net.md-5:bungeecord-chat:1.12-SNAPSHOT'
}

// 解压缩jar包到某目录
task unzip(type: Copy) {
    // 原始jar包文件
    def zipFile = file('build/libs/' + project.name + '-' + project.version + '.jar')
    // 解压缩目标目录
    def outputDir = file("build/repack")
    // 文件过滤，去除部分class。
    FileTree jarTree = zipTree(zipFile)
    // 从jar的目录树中输出到目标目录
    from jarTree
    into outputDir
    zipFile.delete()
}

task pack(type: Zip) {
    from 'build/repack'
    //excludes = ['**/build/repack/normal/plugin_113.yml**']  //exclude
    archiveName project.name + '-' + project.version + '.jar'
    //destinationDir(file('docker/solr-dev/'))
}

compileJava.dependsOn clean
unzip.dependsOn build
pack.dependsOn unzip




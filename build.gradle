buildscript {
    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/gradle-plugin'
        }
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.4.21' // 请确保添加 Kotlin，至少使用 1.4.0 版本
}


group 'com.mohistmc'
version '1.0-SNAPSHOT'

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

repositories {
    mavenLocal()
    maven { url 'https://maven.aliyun.com/repository/public/' }
    maven { url 'https://maven.mohistmc.com/' }
    maven {
        url 'https://repo.maven.apache.org/maven2'
        name 'Maven Central'
    }
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    compileOnly 'com.mohistmc.miraimbot:core:0.4.3'
    compileOnly 'com.mohistmc.miraimbot:annotations:0.4.2'
    annotationProcessor 'com.mohistmc.miraimbot:compiler:0.4.2'
    compileOnly("net.mamoe:mirai-core-jvm:2.8.0-M1") {
        exclude group: 'net.mamoe', module: 'mirai-core-api'
        exclude group: 'net.mamoe', module: 'mirai-core-utils'
    }
    compileOnly("net.mamoe:mirai-core-api-jvm:2.8.0-M1") {
        exclude group: 'net.mamoe', module: 'mirai-core-utils'
    }
    compileOnly("net.mamoe:mirai-core-utils-jvm:2.8.0-M1")

    compileOnly 'com.google.guava:guava:31.0.1-jre'
    compileOnly 'org.springframework.boot:spring-boot-starter-web:2.5.6'
    compileOnly 'com.alibaba:fastjson:1.2.78'
    compileOnly 'com.google.code.gson:gson:2.8.9'
    compileOnly 'cn.hutool:hutool-all:5.7.15'
    compileOnly 'net.minecrell:terminalconsoleappender:1.3.0'
    compileOnly 'org.jline:jline-terminal-jansi:3.20.0'
    compileOnly 'org.jline:jline-terminal-jna:3.20.0'
    compileOnly 'org.jline:jline-reader:3.20.0'
    compileOnly 'org.javacord:javacord:3.3.2'
    compileOnly "com.mohistmc.yaml:Yaml:0.1"
    compileOnly 'org.apache.logging.log4j:log4j-api:2.14.1'
    compileOnly 'org.apache.logging.log4j:log4j-core:2.14.1'
}

task unzip(type: Copy) {
    def zipFile = file('build/libs/' + project.name + '-' + project.version + '.jar')
    def outputDir = file("build/repack")
    FileTree jarTree = zipTree(zipFile)
    from jarTree
    into outputDir
}

task pack(type: Zip) {
    from 'build/repack'
    archiveName project.name + '-' + project.version + '.jar'
}

compileJava.dependsOn clean
build.dependsOn pack
pack.dependsOn unzip



